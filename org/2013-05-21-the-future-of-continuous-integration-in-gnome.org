#+TITLE: The Future of Continuous Integration in GNOME
#+DATE: 2013-05-21
#+SETUPFILE: ~/git.w/octopress/source/octopress.org
#+OCTO-MD_LAYOUT: post
#+OCTO-MD_CATEGORIES: research papers
#+OCTO-MD_ICON: 051210_5526_750
#+OCTO-MD_PUBLISHED: true

This year is the first edition of [[http://releng.polymtl.ca/][RelEng: The International Workshop on Release Engineering]].  [[http://calcifer.org/][Germán]] presented our paper [[../assets/pdfs/papers/dmg2013_relengGnome.pdf][The Future of
Continuous Integration in GNOME]]. Its full bibliographic entry is:

#+BEGIN_HTML
<blockquote>
{% bibtex %}
@inproceedings{dmg2013-relenggit,
  title={The Future of Continuous Integration in GNOME},
  author={Colin Walters and Germán Poo-Caamaño and Daniel M. German},
  booktitle={The International Workshop on Release Engineering, RELENG 2013},
  year={2013},
  month= {May},
  pages = {33--36},
}
{% endbibtex %}
</blockquote>
#+END_HTML

{{{more}}}

This paper is a description of the new method to deploy releases in
GNOME in a manner that uses a version control model. The goal is to
make it easy to deploy (and equally important) rollback releases of
the entire desktop.

This is its Bibtex entry:

#+begin_example
@inproceedings{dmg2013-relenggit,
  title={The Future of Continuous Integration in GNOME},
  author={Colin Walters and Germán Poo-Caamaño and Daniel M. German},
  booktitle={The International Workshop on Release Engineering, RELENG 2013},
  year={2013},
  month= {May},
  pages = {33--36},
}
#+end_example

and this its abstract:


#+begin_quote
In Free and Open Source Software (FOSS) projects
based on Linux systems, the users usually install the software
from distributions. The distributions act as intermediaries be-
tween software developers and users. Distributors collect the
source code of the different projects and package them, ready
to be installed by the users. Packages seems to work well for
managing and distributing stable major and minor releases. It
presents, however, various release management challenges for
developers of projects with multiples dependencies not always
available in the stable version of their systems. In projects like
GNOME, composed of dozens of individual components, devel-
opers must build newer versions of the libraries and applications
that their applications depend upon before working in their own
projects. This process can be cumbersome for developers who are
not programmers, such as user interaction designers or technical
writers. In this paper we describe some of the problems that the
current distribution model presents to do continuous integration,
testing and deployment for developers in GNOME, and present
ongoing work intended to address these problems that uses a git-
like approach to the building and deployment of applications.
#+end_quote

Here is the presentation:

#+BEGIN_HTML
<center>
<iframe src="http://www.slideshare.net/slideshow/embed_code/21650647" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</center>
#+END_HTML
