#+TITLE: What effect does Distributed Version Control have on OSS Project Organization?
#+DATE: 2013-05-22
#+SETUPFILE: ~/git.w/octopress/source/octopress.org
#+OCTO-MD_LAYOUT: post
#+OCTO-MD_CATEGORIES: papers research
#+OCTO-MD_ICON: 051109_3818_750
#+OCTO-MD_PUBLISHED: true

Another paper we published at [[http://releng.polymtl.ca/][RelEng: The International Workshop on
Release Engineering]] is worked mainly by [[http://users.encs.concordia.ca/~pcr/][Peter Rigby]] when we was still
a graduate student: [[../assets/pdfs/papers/dmg2013_relengGit.pdf][What effect does Distributed Version Control have on OSS Project Organization?]]

#+BEGIN_HTML
<blockquote>
{% bibtex %}
@inproceedings{dmg2013-relenggit,
  title={What effect does Distributed Version Control have on OSS Project Organization?},
  author={Peter Rigby and Earl Barr and Chris Bird and Premkumar Devanbu  and Daniel German},
  booktitle={The International Workshop on Release Engineering, RELENG 2013},
  year={2013},
  month= {May},
  pages = {xx--yy},
}
{% endbibtex %}
</blockquote>
#+END_HTML

{{{more}}}

This paper contrasts the practices of the use of git by the Linux
development team with the use of CVS by FreeBSD (since then FreeBSD
has moved to Subversion).

This is its Bibtex entry:

#+begin_example
@inproceedings{dmg2013-relenggit,
  title="{What effect does Distributed Version Control have on OSS Project Organization?}",
  author={Peter Rigby and Earl Barr and Chris Bird and Premkumar Devanbu  and Daniel German},
  booktitle={The International Workshop on Release Engineering, RELENG 2013},
  year={2013},
  month= "May",
  pages = "xx--yy",
}
#+end_example

and this its abstract:

#+begin_quote
Many Open Source Software (OSS) projects are
moving form Centralized Version Control (CVC) to Distributed
Version Control (DVC). The effect of this shift on project
organization and developer collaboration is not well understood.
In this paper, we use a theoretical argument to evaluate the
appropriateness of using DVC in the context of two very common
organization forms in OSS: a dictatorship and a peer group. We
find that DVC facilitates large hierarchical communities as well as
smaller groups of developers, while CVC allows for consensus-
building by a peer group. We also find that the flexibility of
DVC systems allows for diverse styles of developer collaboration.
With CVC, changes flow up and down (and publicly) via a
central repository. In contrast, DVC facilitates collaboration in
which work output can flow sideways (and privately) between
collaborators, with no repository being inherently more impor-
tant or central. These sideways flows are a relatively new concept.
Developers on the Linux project, who tend to be experienced DVC
users, cluster around “sandboxes:” repositories where developers
can work together on a particular topic, isolating their changes
from other developers. In this work, we focus on two large,
mature OSS projects to illustrate these findings. However, we
suggest that social media sites like GitHub may engender other
original styles of collaboration that deserve further study.
#+end_quote

--dmg
